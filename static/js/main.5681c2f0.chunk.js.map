{"version":3,"sources":["logo/snooping.svg","components/layout/ReactHeader.js","components/layout/ReactFooter.js","api/index.js","helpers/index.js","components/loaders/ReactCommentPlaceholder.js","components/comments/ReactComment.js","actions/index.js","constants/index.js","components/comments/ReactComments.js","components/stories/details/ReactStoryDescription.js","components/stories/details/ReactStory.js","components/loaders/ReactSpinner.js","components/stories/ReactTopStories.js","components/stories/ReactNewStories.js","components/stories/ReactBestStories.js","components/stories/ReactShowStories.js","components/stories/ReactAskStories.js","components/stories/ReactJobs.js","components/layout/ReactMain.js","components/App.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","Layout","ReactHeader","react_default","a","createElement","style","backgroundColor","position","zIndex","width","className","menu","mode","defaultSelectedKeys","lineHeight","Item","key","src","svg","maxWidth","react_router_dom","to","target","href","icon","type","Footer","textAlign","color","axios","create","baseURL","calculateTimeDiffString","seconds_item_time","seconds_now","Date","getTime","seconds_difference","Math","floor","concat","ReactCommentPlaceholder","skeleton","loading","avatar","active","paragraph","rows","ReactComment","id","this","props","fetchCommentItem","data","timeDiffString","time","Fragment","comment","shape","marginBottom","border","padding","actions","author","by","content","dangerouslySetInnerHTML","__html","text","kids","ReactComments_ReactComments","Component","mapActionsToProps","_ref13","Object","asyncToGenerator","regenerator_default","mark","_callee13","dispatch","getState","response","wrap","_context13","prev","next","hackernewsApi","get","sent","payload","defineProperty","stop","_x25","_x26","apply","arguments","connect","state","ownProps","commentItems","ReactComments","map","comments_ReactComment","Descriptions","ReactStoryDescription","showComments","toggleCommentState","console","log","_this","setState","_this$props$story","story","score","title","descendants","url","timeDiff","descriptions","tag","label","onClick","ReactStory","_this$props","fetchJobStoryItem","fetchShowStoryItem","fetchAskStoryItem","fetchNewStoryItem","fetchBestStoryItem","fetchTopStoryItem","ReactStoryDescription_ReactStoryDescription","_ref10","_callee10","_context10","_x19","_x20","_ref12","_callee12","_context12","_x23","_x24","_ref11","_callee11","_context11","_x21","_x22","_ref7","_callee7","_context7","_x13","_x14","_ref8","_callee8","_context8","_x15","_x16","_ref9","_callee9","_context9","_x17","_x18","objectSpread","newStoryItems","topStoryItems","bestStoryItems","showStoryItems","jobStoryItems","askStoryItems","ReactSpinner","spin","size","ReactTopStories","fetchTopStoryIds","topStoryIds","loaded","length","storyId","details_ReactStory","loaders_ReactSpinner","_ref","_callee","_context","slice","_x","_x2","ReactNewStories","fetchNewStoryIds","newStoryIds","_ref3","_callee3","_context3","_x5","_x6","ReactBestStories","fetchBestStoryIds","bestStoryIds","_ref2","_callee2","_context2","_x3","_x4","ReactShowStories","fetchShowStoryIds","showStoryIds","_ref4","_callee4","_context4","_x7","_x8","ReactAskStories","fetchAskStoryIds","askStoryIds","_ref5","_callee5","_context5","_x9","_x10","ReactJobs","fetchJobStoryIds","jobStoryIds","_ref6","_callee6","_context6","_x11","_x12","ReactMain","layout","Content","marginTop","background","minHeight","react_router","path","exact","component","App","layout_ReactHeader","ReactMain_ReactMain","ReactFooter","rootReducer","combineReducers","undefined","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5681c2f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snooping.4627c20d.svg\";","import React from 'react'\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport svg from '../../logo/snooping.svg';\r\nconst { Header } = Layout;\r\n\r\n\r\nfunction ReactHeader() {\r\n    return (\r\n        <Header style={{ backgroundColor:'white', position: 'fixed', zIndex: 1, width: '100%' }}>\r\n            <div className=\"logo\" />\r\n            <Menu\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={['topStories']}\r\n                style={{ lineHeight: '64px' }}\r\n            >\r\n                <Menu.Item key=\"logo\">\r\n                    <img src={svg} style={{maxWidth: '38px'}}></img>\r\n                </Menu.Item>\r\n                \r\n                <Menu.Item key=\"topStories\">\r\n                    <Link to=\"/top-stories\">Top Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"newStories\">\r\n                    <Link to=\"/new-stories\">New Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"bestStories\">\r\n                    <Link to=\"/best-stories\">Best Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"showStories\">\r\n                    <Link to=\"/show-stories\">Show Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"askStories\">\r\n                    <Link to=\"/ask-stories\">Ask Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"jobStories\">\r\n                    <Link to=\"/jobs\">Jobs</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"github-link\">\r\n                   \r\n                    <a \r\n                    target=\"_blank\"  \r\n                    href=\"https://github.com/danielc92/react-hackernews-app\">\r\n                         <Icon type=\"github\"/>Source Code\r\n                    </a>\r\n                </Menu.Item>\r\n\r\n                \r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default ReactHeader;","import React from 'react'\r\nimport { Layout } from 'antd';\r\nconst { Footer } = Layout;\r\n\r\n\r\nfunction ReactHeader() {\r\n    return (\r\n        <Footer style={{ textAlign: 'center', color: 'white', backgroundColor: '#001529' }}>\r\n            <p>Developed by <strong>Daniel Corcoran</strong></p>\r\n            <p>Built by <strong>React</strong> and <strong>Ant Design UI</strong></p>\r\n            <p>Powered by <strong>Hacker News Firebase API</strong></p>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default ReactHeader;\r\n","import axios from \"axios\";\r\n/*\r\nRoutes I will be using in this application.\r\n/v0/newstories.json\r\n/v0/topstories.json\r\n/v0/beststories.json\r\n/v0/jobstories.json\r\n/v0/showstories.json\r\n/v0/askstories.json\r\n/v0/item/{id}.json\r\n*/\r\nexport default axios.create({\r\n    baseURL: 'https://hacker-news.firebaseio.com/'\r\n})\r\n","export const calculateTimeDiffString = (seconds_item_time) => {\r\n\r\n    let seconds_now = new Date().getTime() / 1000;\r\n    let seconds_difference = Math.floor((seconds_now - seconds_item_time) / 60)\r\n    let time_diff_string  = seconds_difference < 60 ? \r\n                            `${seconds_difference} minutes ago`: \r\n                            `${Math.floor(seconds_difference / 60)} hour(s) ago`\r\n    return time_diff_string\r\n}","import React from 'react';\r\nimport { Skeleton } from 'antd';\r\n\r\nexport default function ReactCommentPlaceholder() {\r\n    return (\r\n        <div>\r\n            <Skeleton \r\n            loading={true}\r\n            avatar \r\n            active\r\n            paragraph={{ rows: 2 }} \r\n                />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactComments from './ReactComments';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCommentItem } from '../../actions';\r\nimport { Comment, Avatar } from 'antd';\r\nimport ReactCommentPlaceholder from '../loaders/ReactCommentPlaceholder';\r\nimport { calculateTimeDiffString } from '../../helpers';\r\n\r\nclass ReactComment extends Component {\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props;\r\n        this.props.fetchCommentItem(id)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data } = this.props;\r\n        \r\n        if (data) {\r\n            var timeDiffString = calculateTimeDiffString(data.time)\r\n        }\r\n\r\n        return (\r\n            <React.Fragment> \r\n                { \r\n                    data ? \r\n                    <Comment\r\n                    shape=\"square\"\r\n                    style={{marginBottom: '.6rem', border: '1px solid #f3f3f3', padding: '.75rem 1.5rem'}}\r\n                    avatar={<Avatar style={{ backgroundColor: '#339DFF' }} icon=\"user\" />}\r\n                    actions={[<p>{timeDiffString}</p>]}\r\n                    author={ data.by }\r\n                    content={\r\n                        <p className=\"help\" dangerouslySetInnerHTML={{__html: data.text }}></p>\r\n                    }>\r\n                        { data.kids ? <ReactComments kids={data.kids}/>: null}\r\n                    </Comment>\r\n                    :  \r\n                    <ReactCommentPlaceholder/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        data: state.commentItems[ownProps.id]\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchCommentItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactComment)\r\n","import hackernewsApi from '../api';\r\nimport { \r\n    FETCH_LIMIT, \r\n    FETCH_COMMENT_ITEM,\r\n    FETCH_TOP_STORY_IDS, \r\n    FETCH_TOP_STORY_ITEM,\r\n    FETCH_ASK_STORY_IDS,\r\n    FETCH_ASK_STORY_ITEM,\r\n    FETCH_NEW_STORY_IDS,\r\n    FETCH_NEW_STORY_ITEM,\r\n    FETCH_SHOW_STORY_IDS,\r\n    FETCH_SHOW_STORY_ITEM,\r\n    FETCH_BEST_STORY_IDS,\r\n    FETCH_BEST_STORY_ITEM,\r\n    FETCH_JOB_ITEM,\r\n    FETCH_JOB_IDS,\r\n} from '../constants';\r\n\r\nexport const fetchTopStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/topstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_TOP_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchBestStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/beststories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_BEST_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchNewStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/newstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_NEW_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchShowStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/showstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_SHOW_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchAskStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/askstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_ASK_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchJobStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/jobstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_JOB_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchJobStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_JOB_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const fetchAskStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_ASK_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchShowStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_SHOW_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchTopStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_TOP_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchBestStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_BEST_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchNewStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_NEW_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchCommentItem = (id) => async (dispatch, getState) => {\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_COMMENT_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}","// Constants to be shared between reducers and actions files.\r\n\r\nexport const FETCH_TOP_STORY_IDS = 'FETCH_TOP_STORY_IDS';\r\nexport const FETCH_TOP_STORY_ITEM = 'FETCH_TOP_STORY_ITEM';\r\n\r\nexport const FETCH_NEW_STORY_IDS = 'FETCH_NEW_STORY_IDS';\r\nexport const FETCH_NEW_STORY_ITEM = 'FETCH_NEW_STORY_ITEM';\r\n\r\nexport const FETCH_BEST_STORY_IDS = 'FETCH_BEST_STORY_IDS';\r\nexport const FETCH_BEST_STORY_ITEM = 'FETCH_BEST_STORY_ITEM';\r\n\r\nexport const FETCH_ASK_STORY_IDS = 'FETCH_ASK_STORY_IDS';\r\nexport const FETCH_ASK_STORY_ITEM = 'FETCH_ASK_STORY_ITEM';\r\n\r\nexport const FETCH_SHOW_STORY_IDS = 'FETCH_SHOW_STORY_IDS';\r\nexport const FETCH_SHOW_STORY_ITEM = 'FETCH_SHOW_STORY_ITEM';\r\n\r\nexport const FETCH_JOB_IDS = 'FETCH_JOBS_IDS';\r\nexport const FETCH_JOB_ITEM = 'FETCH_JOB_ITEM';\r\n\r\nexport const FETCH_COMMENT_ITEM = 'FETCH_COMMENT_ITEM';\r\n\r\nexport const FETCH_LIMIT = 50;","import React, { Component } from 'react';\r\nimport ReactComment from './ReactComment';\r\n\r\n\r\nexport default class ReactComments extends Component {\r\n\r\n    render() {\r\n        const { kids } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                { kids.map(id => <ReactComment id={id}/>)}          \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Descriptions, Button, Tag } from 'antd';\r\nimport { calculateTimeDiffString } from '../../../helpers';\r\nimport ReactCommentPlaceholder from '../../loaders/ReactCommentPlaceholder';\r\nimport ReactComments from '../../comments/ReactComments';\r\nconst { Item } = Descriptions;\r\n\r\n\r\nexport default class ReactStoryDescription extends Component {\r\n\r\n    state = {\r\n        showComments: false\r\n    }\r\n\r\n    toggleCommentState = () => {\r\n        console.log(\"Changing the comment state\")\r\n        this.setState({ showComments: !this.state.showComments })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { by, score, title, descendants, kids, time, type, url, text } = this.props.story;\r\n        const { story } = this.props;\r\n        if (time) {\r\n            var timeDiff = calculateTimeDiffString(time);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    title ? [\r\n                    <Descriptions title={ title }>\r\n                        <Item>By: <Tag color=\"purple\">{ by }</Tag></Item>\r\n                        <Item label=\"Score\">{ score }</Item>\r\n                        { descendants ? <Item label=\"Replies\">{ descendants }</Item> : null }\r\n                        <Item>Created: { timeDiff }</Item>\r\n                        <Item label=\"Type\"><Tag color=\"green\">{ type }</Tag></Item>    \r\n                        <Item label=\"Visit source\"><a href={ url } target=\"_blank\">click here</a></Item> \r\n                    </Descriptions>,\r\n                    <div>\r\n                    {\r\n                        text ? \r\n                        <span dangerouslySetInnerHTML={{ __html: text}}></span> : \r\n                        null\r\n                    }\r\n                    </div>,\r\n                    (\r\n                        kids && this.state.showComments === false\r\n                        ?  \r\n                        <a onClick={this.toggleCommentState}>Load comments</a>\r\n                        : \r\n                        null\r\n                        \r\n                    ),\r\n                    ( \r\n                        this.state.showComments\r\n                        ? \r\n                        <ReactComments kids={kids}/>\r\n                        : \r\n                        null\r\n                    )]\r\n                        :\r\n                        <ReactCommentPlaceholder/>\r\n                    }\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    fetchTopStoryItem, \r\n    fetchAskStoryItem, \r\n    fetchShowStoryItem, \r\n    fetchJobStoryItem,\r\n    fetchNewStoryItem, \r\n    fetchBestStoryItem } from '../../../actions';\r\nimport ReactStoryDescription from './ReactStoryDescription';\r\n\r\n\r\n\r\nclass ReactStory extends Component {\r\n\r\n    componentDidMount() {\r\n        const { id, type} = this.props\r\n        switch (type) {\r\n            case 'job':\r\n                this.props.fetchJobStoryItem(id);\r\n            case 'show':\r\n                this.props.fetchShowStoryItem(id);\r\n            case 'ask':\r\n                this.props.fetchAskStoryItem(id);\r\n            case 'new':\r\n                this.props.fetchNewStoryItem(id);\r\n            case 'best':\r\n                this.props.fetchBestStoryItem(id);\r\n            case 'top':\r\n                this.props.fetchTopStoryItem(id);\r\n            default: \r\n                return\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { story } = this.props;\r\n        return (\r\n            <div style={{ border: '1px solid #f3f3f3', padding: '1rem', marginBottom: '1rem'}}>\r\n            { \r\n                story ? \r\n                <ReactStoryDescription story={story}/> \r\n                :\r\n                null\r\n            } \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    const { type , id} = ownProps;\r\n\r\n    if (type === 'new') {\r\n        return {\r\n            story: { ...state.newStoryItems[id] }\r\n        }\r\n    } else if (type === 'top') {\r\n        return {\r\n            story: { ...state.topStoryItems[id] }\r\n        }\r\n    } else if (type === 'best') {\r\n        return {\r\n            story: { ...state.bestStoryItems[id] }\r\n        }\r\n    } else if (type === 'show') {\r\n        return {\r\n            story: { ...state.showStoryItems[id] }\r\n        }\r\n    } else if (type === 'job') {\r\n        return {\r\n            story: { ...state.jobStoryItems[id] }\r\n        }\r\n    } else if (type === 'ask') {\r\n        return {\r\n            story : { ...state.askStoryItems[id]}\r\n        }\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchTopStoryItem,\r\n    fetchNewStoryItem,\r\n    fetchBestStoryItem,\r\n    fetchJobStoryItem,\r\n    fetchAskStoryItem,\r\n    fetchShowStoryItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactStory)","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nfunction ReactSpinner() {\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <Spin size=\"large\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactSpinner;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchTopStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactTopStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTopStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { topStoryIds } = this.props\r\n        const loaded = topStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? topStoryIds.map(storyId => <ReactStory type=\"top\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        topStoryIds: state.topStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchTopStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactTopStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchNewStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactNewStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchNewStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { newStoryIds } = this.props\r\n        const loaded = newStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { \r\n                    loaded \r\n                    ? \r\n                    newStoryIds.map(storyId => <ReactStory type='new' key={storyId} id={storyId}/>)\r\n                    : \r\n                    <ReactSpinner/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newStoryIds: state.newStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchNewStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactNewStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchBestStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactBestStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBestStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { bestStoryIds } = this.props\r\n        const loaded = bestStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { \r\n                    loaded ? \r\n                    bestStoryIds.map(storyId => <ReactStory type=\"best\" key={storyId} id={storyId}/>): \r\n                    <ReactSpinner/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        bestStoryIds: state.bestStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchBestStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactBestStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchShowStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactShowStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchShowStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { showStoryIds } = this.props\r\n        const loaded = showStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? showStoryIds.map(storyId => <ReactStory type=\"show\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showStoryIds: state.showStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchShowStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactShowStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchAskStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactAskStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAskStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { askStoryIds } = this.props\r\n        const loaded = askStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? askStoryIds.map(storyId => <ReactStory type=\"ask\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        askStoryIds: state.askStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchAskStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactAskStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchJobStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactJobs extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchJobStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { jobStoryIds } = this.props\r\n        const loaded = jobStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? jobStoryIds.map(storyId => <ReactStory type=\"job\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jobStoryIds: state.jobStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchJobStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactJobs)\r\n\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd'\r\nimport ReactTopStories from '../stories/ReactTopStories';\r\nimport ReactNewStories from '../stories/ReactNewStories';\r\nimport ReactBestStories from '../stories/ReactBestStories';\r\nimport ReactShowStories from '../stories/ReactShowStories';\r\nimport ReactAskStories from '../stories/ReactAskStories';\r\nimport ReactJobs from '../stories/ReactJobs';\r\nimport {Route} from 'react-router-dom';\r\n\r\n\r\nexport default class ReactMain extends Component {\r\n    render() {\r\n        return (\r\n            <Layout.Content style={{ padding: '10px', marginTop: 64 }}>\r\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\r\n                {/* Default to top stories if no path specified */}\r\n                <Route path=\"/\" exact component={ReactTopStories}/>\r\n                <Route path=\"/top-stories\" component={ReactTopStories}/>\r\n                <Route path=\"/new-stories\" component={ReactNewStories}/>\r\n                <Route path=\"/best-stories\" component={ReactBestStories}/>\r\n                <Route path=\"/show-stories\" component={ReactShowStories}/>\r\n                <Route path=\"/ask-stories\" component={ReactAskStories}/>\r\n                <Route path=\"/jobs\" component={ReactJobs}/>\r\n\r\n            </div>\r\n            </Layout.Content>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Layout } from 'antd';\r\nimport ReactHeader from './layout/ReactHeader';\r\nimport ReactFooter from './layout/ReactFooter';\r\nimport ReactMain from './layout/ReactMain';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{minHeight: '100vh'}}>\r\n                <ReactHeader/>\r\n                <ReactMain/>\r\n                <ReactFooter/>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { \r\n    FETCH_LIMIT,\r\n    FETCH_COMMENT_ITEM,\r\n    FETCH_TOP_STORY_IDS, \r\n    FETCH_TOP_STORY_ITEM,\r\n    FETCH_ASK_STORY_IDS,\r\n    FETCH_ASK_STORY_ITEM,\r\n    FETCH_NEW_STORY_IDS,\r\n    FETCH_NEW_STORY_ITEM,\r\n    FETCH_SHOW_STORY_IDS,\r\n    FETCH_SHOW_STORY_ITEM,\r\n    FETCH_BEST_STORY_IDS,\r\n    FETCH_BEST_STORY_ITEM,\r\n    FETCH_JOB_ITEM,\r\n    FETCH_JOB_IDS, } from '../constants';\r\n\r\nconst topStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_TOP_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst topStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_TOP_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst bestStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_BEST_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst bestStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_BEST_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst newStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_NEW_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst newStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_NEW_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst commentStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_COMMENT_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst showStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_SHOW_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst showStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_SHOW_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst askStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_ASK_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst askStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_ASK_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst jobStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_JOB_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst jobStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_JOB_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    topStoryIds: topStoryIdsReducer,\r\n    topStoryItems: topStoryItemsReducer,\r\n    newStoryIds: newStoryIdsReducer,\r\n    newStoryItems: newStoryItemsReducer,\r\n    bestStoryIds: bestStoryIdsReducer,\r\n    bestStoryItems: bestStoryItemsReducer,\r\n    commentItems: commentStoryItemsReducer,\r\n    showStoryIds: showStoryIdsReducer,\r\n    showStoryItems: showStoryItemsReducer,\r\n    askStoryIds: askStoryIdsReducer,\r\n    askStoryItems: askStoryItemsReducer,\r\n    jobStoryIds: jobStoryIdsReducer,\r\n    jobStoryItems: jobStoryItemsReducer\r\n \r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n// ant design style sheet\r\nimport 'antd/dist/antd.css';\r\n\r\n// router\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n// redux and redux middleware\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(<Provider store={store}><HashRouter><App/></HashRouter></Provider>, document.getElementById('root'))"],"sourceRoot":""}