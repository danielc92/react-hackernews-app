{"version":3,"sources":["logo/snooping.svg","components/layout/ReactHeader.js","components/layout/ReactFooter.js","api/index.js","helpers/index.js","components/loaders/ReactCommentPlaceholder.js","components/comments/ReactComment.js","actions/index.js","constants/index.js","components/comments/ReactComments.js","components/stories/details/ReactStoryDescription.js","components/stories/details/ReactStory.js","components/loaders/ReactSpinner.js","components/stories/ReactTopStories.js","components/stories/ReactNewStories.js","components/stories/ReactBestStories.js","components/stories/ReactShowStories.js","components/stories/ReactAskStories.js","components/stories/ReactJobs.js","components/layout/ReactMain.js","components/App.js","reducers/index.js","index.js"],"names":["module","exports","Header","Layout","ReactHeader","style","backgroundColor","position","zIndex","width","className","mode","defaultSelectedKeys","lineHeight","Item","key","src","svg","maxWidth","to","target","href","type","Footer","textAlign","color","axios","create","baseURL","calculateTimeDiffString","seconds_item_time","seconds_now","Date","getTime","seconds_difference","Math","floor","ReactCommentPlaceholder","loading","active","paragraph","rows","ReactComment","id","this","props","fetchCommentItem","data","timeDiffString","time","Fragment","borderLeft","padding","actions","datetime","author","by","content","dangerouslySetInnerHTML","__html","text","kids","Component","mapActionsToProps","dispatch","getState","a","hackernewsApi","get","response","payload","connect","state","ownProps","commentItems","ReactComments","map","Descriptions","ReactStoryDescription","showComments","toggleCommentState","console","log","setState","story","score","title","descendants","url","timeDiff","label","onClick","ReactStory","fetched","toggleFetched","fetchJobStoryItem","fetchNewStoryItem","fetchBestStoryItem","fetchAskStoryItem","fetchShowStoryItem","fetchTopStoryItem","border","marginBottom","newStoryItems","topStoryItems","bestStoryItems","showStoryItems","jobStoryItems","askStoryItems","ReactSpinner","paddingTop","delay","tip","size","ReactTopStories","fetchTopStoryIds","topStoryIds","loaded","length","storyId","slice","ReactNewStories","fetchNewStoryIds","newStoryIds","ReactBestStories","fetchBestStoryIds","bestStoryIds","ReactShowStories","fetchShowStoryIds","showStoryIds","ReactAskStories","fetchAskStoryIds","askStoryIds","ReactJobs","fetchJobStoryIds","jobStoryIds","ReactMain","Content","marginTop","path","exact","component","App","minHeight","ReactFooter","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93858d56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snooping.4627c20d.svg\";","import React from 'react'\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport svg from '../../logo/snooping.svg';\r\nconst { Header } = Layout;\r\n\r\n\r\nfunction ReactHeader() {\r\n    return (\r\n        <Header style={{ backgroundColor:'white', position: 'fixed', zIndex: 1, width: '100%' }}>\r\n            <div className=\"logo\" />\r\n            <Menu\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={['topStories']}\r\n                style={{ lineHeight: '64px' }}\r\n            >\r\n                <Menu.Item key=\"logo\">\r\n                    <img src={svg} style={{maxWidth: '38px'}}></img>\r\n                </Menu.Item>\r\n                \r\n                <Menu.Item key=\"topStories\">\r\n                    <Link to=\"/top-stories\">Top Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"newStories\">\r\n                    <Link to=\"/new-stories\">New Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"bestStories\">\r\n                    <Link to=\"/best-stories\">Best Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"showStories\">\r\n                    <Link to=\"/show-stories\">Show Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"askStories\">\r\n                    <Link to=\"/ask-stories\">Ask Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"jobStories\">\r\n                    <Link to=\"/jobs\">Jobs</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"github-link\">\r\n                   \r\n                    <a \r\n                    target=\"_blank\"  \r\n                    href=\"https://github.com/danielc92/react-hackernews-app\">\r\n                         <Icon type=\"github\"/>Source Code\r\n                    </a>\r\n                </Menu.Item>\r\n\r\n                \r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default ReactHeader;","import React from 'react'\r\nimport { Layout } from 'antd';\r\nconst { Footer } = Layout;\r\n\r\n\r\nfunction ReactHeader() {\r\n    return (\r\n        <Footer style={{ textAlign: 'center', color: 'white', backgroundColor: '#001529' }}>\r\n            <p>Developed by <strong>Daniel Corcoran</strong></p>\r\n            <p>Built by <strong>React</strong> and <strong>Ant Design UI</strong></p>\r\n            <p>Powered by <strong>Hacker News Firebase API</strong></p>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default ReactHeader;\r\n","import axios from \"axios\";\r\n/*\r\nRoutes I will be using in this application.\r\n/v0/newstories.json\r\n/v0/topstories.json\r\n/v0/beststories.json\r\n/v0/jobstories.json\r\n/v0/showstories.json\r\n/v0/askstories.json\r\n/v0/item/{id}.json\r\n*/\r\nexport default axios.create({\r\n    baseURL: 'https://hacker-news.firebaseio.com/'\r\n})\r\n","export const calculateTimeDiffString = (seconds_item_time) => {\r\n\r\n    let seconds_now = new Date().getTime() / 1000;\r\n    let seconds_difference = Math.floor((seconds_now - seconds_item_time) / 60)\r\n    let time_diff_string  = seconds_difference < 60 ? \r\n                            `${seconds_difference} minutes ago`: \r\n                            `${Math.floor(seconds_difference / 60)} hour(s) ago`\r\n    return time_diff_string\r\n}","import React from 'react';\r\nimport { Skeleton } from 'antd';\r\n\r\nexport default function ReactCommentPlaceholder() {\r\n    return (\r\n        <div>\r\n            <Skeleton \r\n            loading={true}\r\n            active\r\n            paragraph={{ rows: 1 }} \r\n                />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactComments from './ReactComments';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCommentItem } from '../../actions';\r\nimport { Comment, Tag } from 'antd';\r\nimport ReactCommentPlaceholder from '../loaders/ReactCommentPlaceholder';\r\nimport { calculateTimeDiffString } from '../../helpers';\r\n\r\nclass ReactComment extends Component {\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props;\r\n        this.props.fetchCommentItem(id)\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        \r\n        if (data) {\r\n            var timeDiffString = calculateTimeDiffString(data.time)\r\n        }\r\n\r\n        return (\r\n            <React.Fragment> \r\n                { \r\n                    data ? \r\n                    <Comment\r\n                    style={{borderLeft: '1px solid #f3f3f3', padding: '.30rem 0rem'}}\r\n                    actions={<span>Replies { 55 }</span>}\r\n                    datetime={<span>{ timeDiffString }</span>}\r\n                    author={ <Tag color=\"purple\">{ data.by }</Tag> }\r\n                    content={\r\n                        <p className=\"help\" dangerouslySetInnerHTML={{__html: data.text }}></p>\r\n                    }>\r\n                        { data.kids ? <ReactComments kids={data.kids}/>: null}\r\n                    </Comment>\r\n                    :  \r\n                    <ReactCommentPlaceholder/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        data: state.commentItems[ownProps.id]\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchCommentItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactComment)\r\n","import hackernewsApi from '../api';\r\nimport { \r\n    FETCH_LIMIT, \r\n    FETCH_COMMENT_ITEM,\r\n    FETCH_TOP_STORY_IDS, \r\n    FETCH_TOP_STORY_ITEM,\r\n    FETCH_ASK_STORY_IDS,\r\n    FETCH_ASK_STORY_ITEM,\r\n    FETCH_NEW_STORY_IDS,\r\n    FETCH_NEW_STORY_ITEM,\r\n    FETCH_SHOW_STORY_IDS,\r\n    FETCH_SHOW_STORY_ITEM,\r\n    FETCH_BEST_STORY_IDS,\r\n    FETCH_BEST_STORY_ITEM,\r\n    FETCH_JOB_ITEM,\r\n    FETCH_JOB_IDS,\r\n} from '../constants';\r\n\r\nexport const fetchTopStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/topstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_TOP_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchBestStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/beststories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_BEST_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchNewStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/newstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_NEW_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchShowStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/showstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_SHOW_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchAskStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/askstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_ASK_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchJobStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/jobstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_JOB_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchJobStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_JOB_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const fetchAskStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_ASK_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchShowStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_SHOW_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchTopStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_TOP_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchBestStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_BEST_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchNewStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_NEW_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchCommentItem = (id) => async (dispatch, getState) => {\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_COMMENT_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}","// Constants to be shared between reducers and actions files.\r\n\r\nexport const FETCH_TOP_STORY_IDS = 'FETCH_TOP_STORY_IDS';\r\nexport const FETCH_TOP_STORY_ITEM = 'FETCH_TOP_STORY_ITEM';\r\n\r\nexport const FETCH_NEW_STORY_IDS = 'FETCH_NEW_STORY_IDS';\r\nexport const FETCH_NEW_STORY_ITEM = 'FETCH_NEW_STORY_ITEM';\r\n\r\nexport const FETCH_BEST_STORY_IDS = 'FETCH_BEST_STORY_IDS';\r\nexport const FETCH_BEST_STORY_ITEM = 'FETCH_BEST_STORY_ITEM';\r\n\r\nexport const FETCH_ASK_STORY_IDS = 'FETCH_ASK_STORY_IDS';\r\nexport const FETCH_ASK_STORY_ITEM = 'FETCH_ASK_STORY_ITEM';\r\n\r\nexport const FETCH_SHOW_STORY_IDS = 'FETCH_SHOW_STORY_IDS';\r\nexport const FETCH_SHOW_STORY_ITEM = 'FETCH_SHOW_STORY_ITEM';\r\n\r\nexport const FETCH_JOB_IDS = 'FETCH_JOBS_IDS';\r\nexport const FETCH_JOB_ITEM = 'FETCH_JOB_ITEM';\r\n\r\nexport const FETCH_COMMENT_ITEM = 'FETCH_COMMENT_ITEM';\r\n\r\nexport const FETCH_LIMIT = 150;","import React, { Component } from 'react';\r\nimport ReactComment from './ReactComment';\r\n\r\n\r\nexport default class ReactComments extends Component {\r\n\r\n    render() {\r\n        const { kids } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                { kids.map(id => <ReactComment id={id}/>)}          \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Descriptions, Button, Tag } from 'antd';\r\nimport { calculateTimeDiffString } from '../../../helpers';\r\nimport ReactCommentPlaceholder from '../../loaders/ReactCommentPlaceholder';\r\nimport ReactComments from '../../comments/ReactComments';\r\nconst { Item } = Descriptions;\r\n\r\n\r\nexport default class ReactStoryDescription extends Component {\r\n\r\n    state = {\r\n        showComments: false\r\n    }\r\n\r\n    toggleCommentState = () => {\r\n        console.log(\"Changing the comment state\")\r\n        this.setState({ showComments: !this.state.showComments })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { by, score, title, descendants, kids, time, type, url, text } = this.props.story;\r\n        const { story } = this.props;\r\n        if (time) {\r\n            var timeDiff = calculateTimeDiffString(time);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    title ? [\r\n                    <Descriptions title={ title }>\r\n                        <Item>By: <Tag color=\"purple\">{ by }</Tag></Item>\r\n                        <Item label=\"Score\">{ score }</Item>\r\n                        { descendants ? <Item label=\"Replies\">{ descendants }</Item> : null }\r\n                        <Item>Created: { timeDiff }</Item>\r\n                        <Item label=\"Type\"><Tag color=\"green\">{ type }</Tag></Item>    \r\n                        <Item label=\"Visit source\"><a href={ url } target=\"_blank\">click here</a></Item> \r\n                    </Descriptions>,\r\n                    <div>\r\n                    {\r\n                        text ? \r\n                        <span dangerouslySetInnerHTML={{ __html: text}}></span> : \r\n                        null\r\n                    }\r\n                    </div>,\r\n                    (\r\n                        kids && this.state.showComments === false\r\n                        ?  \r\n                        <a onClick={this.toggleCommentState}>Load comments</a>\r\n                        : \r\n                        null\r\n                        \r\n                    ),\r\n                    ( \r\n                        this.state.showComments\r\n                        ? \r\n                        <ReactComments kids={kids}/>\r\n                        : \r\n                        null\r\n                    )]\r\n                        :\r\n                        <ReactCommentPlaceholder/>\r\n                    }\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    fetchTopStoryItem, \r\n    fetchAskStoryItem, \r\n    fetchShowStoryItem, \r\n    fetchJobStoryItem,\r\n    fetchNewStoryItem, \r\n    fetchBestStoryItem } from '../../../actions';\r\nimport ReactStoryDescription from './ReactStoryDescription';\r\n\r\n\r\n\r\nclass ReactStory extends Component {\r\n\r\n    state = {\r\n        fetched: false\r\n    }\r\n\r\n    toggleFetched = () => {\r\n        this.setState({\r\n            fetched: this.state.fetched\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id, type} = this.props\r\n\r\n        if (type === 'job' && this.state.fetched === false) {\r\n            this.props.fetchJobStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'new' && this.state.fetched === false) {\r\n            this.props.fetchNewStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'best' && this.state.fetched === false) {\r\n            this.props.fetchBestStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'ask' && this.state.fetched === false) {\r\n            this.props.fetchAskStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'show' && this.state.fetched === false) {\r\n            this.props.fetchShowStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'top' && this.state.fetched === false) {\r\n            this.props.fetchTopStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n    }\r\n\r\n    render() {\r\n        const { story } = this.props;\r\n        return (\r\n            <div style={{ border: '1px solid #f3f3f3', padding: '1rem', marginBottom: '1rem'}}>\r\n            { \r\n                story ? \r\n                <ReactStoryDescription story={story}/> \r\n                :\r\n                null\r\n            } \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    const { type , id} = ownProps;\r\n\r\n    if (type === 'new') {\r\n        return {\r\n            story: { ...state.newStoryItems[id] }\r\n        }\r\n    } else if (type === 'top') {\r\n        return {\r\n            story: { ...state.topStoryItems[id] }\r\n        }\r\n    } else if (type === 'best') {\r\n        return {\r\n            story: { ...state.bestStoryItems[id] }\r\n        }\r\n    } else if (type === 'show') {\r\n        return {\r\n            story: { ...state.showStoryItems[id] }\r\n        }\r\n    } else if (type === 'job') {\r\n        return {\r\n            story: { ...state.jobStoryItems[id] }\r\n        }\r\n    } else if (type === 'ask') {\r\n        return {\r\n            story : { ...state.askStoryItems[id]}\r\n        }\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchTopStoryItem,\r\n    fetchNewStoryItem,\r\n    fetchBestStoryItem,\r\n    fetchJobStoryItem,\r\n    fetchAskStoryItem,\r\n    fetchShowStoryItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactStory)","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nfunction ReactSpinner() {\r\n    return (\r\n        <div style={{textAlign: 'center', paddingTop: '1.6rem'}}>\r\n            <Spin \r\n            delay={1200}\r\n            tip=\"Fetching data...\"\r\n            size=\"large\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactSpinner;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchTopStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactTopStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTopStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { topStoryIds } = this.props\r\n        const loaded = topStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? topStoryIds.map(storyId => <ReactStory type=\"top\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        topStoryIds: state.topStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchTopStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactTopStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchNewStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactNewStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchNewStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { newStoryIds } = this.props\r\n        const loaded = newStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { \r\n                    loaded \r\n                    ? \r\n                    newStoryIds.map(storyId => <ReactStory type='new' key={storyId} id={storyId}/>)\r\n                    : \r\n                    <ReactSpinner/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newStoryIds: state.newStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchNewStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactNewStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchBestStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactBestStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBestStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { bestStoryIds } = this.props\r\n        const loaded = bestStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { \r\n                    loaded ? \r\n                    bestStoryIds.map(storyId => <ReactStory type=\"best\" key={storyId} id={storyId}/>): \r\n                    <ReactSpinner/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        bestStoryIds: state.bestStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchBestStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactBestStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchShowStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactShowStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchShowStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { showStoryIds } = this.props\r\n        const loaded = showStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? showStoryIds.map(storyId => <ReactStory type=\"show\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showStoryIds: state.showStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchShowStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactShowStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchAskStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactAskStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAskStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { askStoryIds } = this.props\r\n        const loaded = askStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? askStoryIds.map(storyId => <ReactStory type=\"ask\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        askStoryIds: state.askStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchAskStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactAskStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchJobStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactJobs extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchJobStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { jobStoryIds } = this.props\r\n        const loaded = jobStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? jobStoryIds.map(storyId => <ReactStory type=\"job\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jobStoryIds: state.jobStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchJobStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactJobs)\r\n\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd'\r\nimport ReactTopStories from '../stories/ReactTopStories';\r\nimport ReactNewStories from '../stories/ReactNewStories';\r\nimport ReactBestStories from '../stories/ReactBestStories';\r\nimport ReactShowStories from '../stories/ReactShowStories';\r\nimport ReactAskStories from '../stories/ReactAskStories';\r\nimport ReactJobs from '../stories/ReactJobs';\r\nimport {Route} from 'react-router-dom';\r\n\r\n\r\nexport default class ReactMain extends Component {\r\n    render() {\r\n        return (\r\n            <Layout.Content style={{ padding: '10px', marginTop: 64 }}>\r\n            <div className=\"container-custom\">\r\n                {/* Default to top stories if no path specified */}\r\n                <Route path=\"/\" exact component={ReactTopStories}/>\r\n                <Route path=\"/top-stories\" component={ReactTopStories}/>\r\n                <Route path=\"/new-stories\" component={ReactNewStories}/>\r\n                <Route path=\"/best-stories\" component={ReactBestStories}/>\r\n                <Route path=\"/show-stories\" component={ReactShowStories}/>\r\n                <Route path=\"/ask-stories\" component={ReactAskStories}/>\r\n                <Route path=\"/jobs\" component={ReactJobs}/>\r\n\r\n            </div>\r\n            </Layout.Content>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Layout } from 'antd';\r\nimport ReactHeader from './layout/ReactHeader';\r\nimport ReactFooter from './layout/ReactFooter';\r\nimport ReactMain from './layout/ReactMain';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{minHeight: '100vh'}}>\r\n                <ReactHeader/>\r\n                <ReactMain/>\r\n                <ReactFooter/>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { \r\n    FETCH_LIMIT,\r\n    FETCH_COMMENT_ITEM,\r\n    FETCH_TOP_STORY_IDS, \r\n    FETCH_TOP_STORY_ITEM,\r\n    FETCH_ASK_STORY_IDS,\r\n    FETCH_ASK_STORY_ITEM,\r\n    FETCH_NEW_STORY_IDS,\r\n    FETCH_NEW_STORY_ITEM,\r\n    FETCH_SHOW_STORY_IDS,\r\n    FETCH_SHOW_STORY_ITEM,\r\n    FETCH_BEST_STORY_IDS,\r\n    FETCH_BEST_STORY_ITEM,\r\n    FETCH_JOB_ITEM,\r\n    FETCH_JOB_IDS, } from '../constants';\r\n\r\nconst topStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_TOP_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst topStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_TOP_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst bestStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_BEST_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst bestStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_BEST_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst newStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_NEW_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst newStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_NEW_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst commentStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_COMMENT_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst showStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_SHOW_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst showStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_SHOW_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst askStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_ASK_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst askStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_ASK_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst jobStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_JOB_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst jobStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_JOB_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    topStoryIds: topStoryIdsReducer,\r\n    topStoryItems: topStoryItemsReducer,\r\n    newStoryIds: newStoryIdsReducer,\r\n    newStoryItems: newStoryItemsReducer,\r\n    bestStoryIds: bestStoryIdsReducer,\r\n    bestStoryItems: bestStoryItemsReducer,\r\n    commentItems: commentStoryItemsReducer,\r\n    showStoryIds: showStoryIdsReducer,\r\n    showStoryItems: showStoryItemsReducer,\r\n    askStoryIds: askStoryIdsReducer,\r\n    askStoryItems: askStoryItemsReducer,\r\n    jobStoryIds: jobStoryIdsReducer,\r\n    jobStoryItems: jobStoryItemsReducer\r\n \r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n// ant design style sheet\r\nimport 'antd/dist/antd.css';\r\n\r\n// router\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n// redux and redux middleware\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(<Provider store={store}><HashRouter><App/></HashRouter></Provider>, document.getElementById('root'))"],"sourceRoot":""}