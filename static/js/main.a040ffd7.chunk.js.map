{"version":3,"sources":["logo/snooping.svg","components/layout/ReactHeader.js","components/layout/ReactFooter.js","api/index.js","helpers/index.js","components/loaders/ReactCommentPlaceholder.js","components/comments/ReactComment.js","actions/index.js","constants/index.js","components/comments/ReactComments.js","components/stories/details/ReactStoryDescription.js","components/stories/details/ReactStory.js","components/loaders/ReactSpinner.js","components/stories/ReactTopStories.js","components/stories/ReactNewStories.js","components/stories/ReactBestStories.js","components/stories/ReactShowStories.js","components/stories/ReactAskStories.js","components/stories/ReactJobs.js","components/layout/ReactMain.js","components/App.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","Layout","ReactHeader","react_default","a","createElement","style","backgroundColor","position","zIndex","width","className","menu","mode","defaultSelectedKeys","lineHeight","Item","key","src","svg","maxWidth","react_router_dom","to","target","href","icon","type","Footer","textAlign","color","axios","create","baseURL","calculateTimeDiffString","seconds_item_time","seconds_now","Date","getTime","seconds_difference","Math","floor","concat","ReactCommentPlaceholder","skeleton","loading","active","paragraph","rows","ReactComment","id","this","props","fetchCommentItem","data","timeDiffString","time","Fragment","comment","borderLeft","padding","actions","datetime","author","tag","by","content","dangerouslySetInnerHTML","__html","text","kids","ReactComments_ReactComments","Component","mapActionsToProps","_ref13","Object","asyncToGenerator","regenerator_default","mark","_callee13","dispatch","getState","response","wrap","_context13","prev","next","hackernewsApi","get","sent","payload","defineProperty","stop","_x25","_x26","apply","arguments","connect","state","ownProps","commentItems","ReactComments","map","comments_ReactComment","Descriptions","ReactStoryDescription","showComments","toggleCommentState","console","log","_this","setState","_this$props$story","story","score","title","descendants","url","timeDiff","descriptions","label","onClick","ReactStory","fetched","toggleFetched","_this$props","fetchJobStoryItem","fetchNewStoryItem","fetchBestStoryItem","fetchAskStoryItem","fetchShowStoryItem","fetchTopStoryItem","border","marginBottom","ReactStoryDescription_ReactStoryDescription","_ref10","_callee10","_context10","_x19","_x20","_ref12","_callee12","_context12","_x23","_x24","_ref11","_callee11","_context11","_x21","_x22","_ref7","_callee7","_context7","_x13","_x14","_ref8","_callee8","_context8","_x15","_x16","_ref9","_callee9","_context9","_x17","_x18","objectSpread","newStoryItems","topStoryItems","bestStoryItems","showStoryItems","jobStoryItems","askStoryItems","ReactSpinner","paddingTop","spin","delay","tip","size","ReactTopStories","fetchTopStoryIds","topStoryIds","loaded","length","storyId","details_ReactStory","loaders_ReactSpinner","_ref","_callee","_context","slice","_x","_x2","ReactNewStories","fetchNewStoryIds","newStoryIds","_ref3","_callee3","_context3","_x5","_x6","ReactBestStories","fetchBestStoryIds","bestStoryIds","_ref2","_callee2","_context2","_x3","_x4","ReactShowStories","fetchShowStoryIds","showStoryIds","_ref4","_callee4","_context4","_x7","_x8","ReactAskStories","fetchAskStoryIds","askStoryIds","_ref5","_callee5","_context5","_x9","_x10","ReactJobs","fetchJobStoryIds","jobStoryIds","_ref6","_callee6","_context6","_x11","_x12","ReactMain","layout","Content","marginTop","react_router","path","exact","component","App","minHeight","layout_ReactHeader","ReactMain_ReactMain","ReactFooter","rootReducer","combineReducers","undefined","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a040ffd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snooping.4627c20d.svg\";","import React from 'react'\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport svg from '../../logo/snooping.svg';\r\nconst { Header } = Layout;\r\n\r\n\r\nfunction ReactHeader() {\r\n    return (\r\n        <Header style={{ backgroundColor:'white', position: 'fixed', zIndex: 1, width: '100%' }}>\r\n            <div className=\"logo\" />\r\n            <Menu\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={['topStories']}\r\n                style={{ lineHeight: '64px' }}\r\n            >\r\n                <Menu.Item key=\"logo\">\r\n                    <img src={svg} style={{maxWidth: '38px'}}></img>\r\n                </Menu.Item>\r\n                \r\n                <Menu.Item key=\"topStories\">\r\n                    <Link to=\"/top-stories\">Top Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"newStories\">\r\n                    <Link to=\"/new-stories\">New Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"bestStories\">\r\n                    <Link to=\"/best-stories\">Best Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"showStories\">\r\n                    <Link to=\"/show-stories\">Show Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"askStories\">\r\n                    <Link to=\"/ask-stories\">Ask Stories</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"jobStories\">\r\n                    <Link to=\"/jobs\">Jobs</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"github-link\">\r\n                   \r\n                    <a \r\n                    target=\"_blank\"  \r\n                    href=\"https://github.com/danielc92/react-hackernews-app\">\r\n                         <Icon type=\"github\"/>Source Code\r\n                    </a>\r\n                </Menu.Item>\r\n\r\n                \r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default ReactHeader;","import React from 'react'\r\nimport { Layout } from 'antd';\r\nconst { Footer } = Layout;\r\n\r\n\r\nfunction ReactHeader() {\r\n    return (\r\n        <Footer style={{ textAlign: 'center', color: 'white', backgroundColor: '#001529' }}>\r\n            <p>Developed by <strong>Daniel Corcoran</strong></p>\r\n            <p>Built by <strong>React</strong> and <strong>Ant Design UI</strong></p>\r\n            <p>Powered by <strong>Hacker News Firebase API</strong></p>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default ReactHeader;\r\n","import axios from \"axios\";\r\n/*\r\nRoutes I will be using in this application.\r\n/v0/newstories.json\r\n/v0/topstories.json\r\n/v0/beststories.json\r\n/v0/jobstories.json\r\n/v0/showstories.json\r\n/v0/askstories.json\r\n/v0/item/{id}.json\r\n*/\r\nexport default axios.create({\r\n    baseURL: 'https://hacker-news.firebaseio.com/'\r\n})\r\n","export const calculateTimeDiffString = (seconds_item_time) => {\r\n\r\n    let seconds_now = new Date().getTime() / 1000;\r\n    let seconds_difference = Math.floor((seconds_now - seconds_item_time) / 60)\r\n    let time_diff_string  = seconds_difference < 60 ? \r\n                            `${seconds_difference} minutes ago`: \r\n                            `${Math.floor(seconds_difference / 60)} hour(s) ago`\r\n    return time_diff_string\r\n}","import React from 'react';\r\nimport { Skeleton } from 'antd';\r\n\r\nexport default function ReactCommentPlaceholder() {\r\n    return (\r\n        <div>\r\n            <Skeleton \r\n            loading={true}\r\n            active\r\n            paragraph={{ rows: 1 }} \r\n                />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactComments from './ReactComments';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCommentItem } from '../../actions';\r\nimport { Comment, Tag } from 'antd';\r\nimport ReactCommentPlaceholder from '../loaders/ReactCommentPlaceholder';\r\nimport { calculateTimeDiffString } from '../../helpers';\r\n\r\nclass ReactComment extends Component {\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props;\r\n        this.props.fetchCommentItem(id)\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        \r\n        if (data) {\r\n            var timeDiffString = calculateTimeDiffString(data.time)\r\n        }\r\n\r\n        return (\r\n            <React.Fragment> \r\n                { \r\n                    data ? \r\n                    <Comment\r\n                    style={{borderLeft: '1px solid #f3f3f3', padding: '.30rem 0rem'}}\r\n                    actions={<span>Replies { 55 }</span>}\r\n                    datetime={<span>{ timeDiffString }</span>}\r\n                    author={ <Tag color=\"purple\">{ data.by }</Tag> }\r\n                    content={\r\n                        <p className=\"help\" dangerouslySetInnerHTML={{__html: data.text }}></p>\r\n                    }>\r\n                        { data.kids ? <ReactComments kids={data.kids}/>: null}\r\n                    </Comment>\r\n                    :  \r\n                    <ReactCommentPlaceholder/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        data: state.commentItems[ownProps.id]\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchCommentItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactComment)\r\n","import hackernewsApi from '../api';\r\nimport { \r\n    FETCH_LIMIT, \r\n    FETCH_COMMENT_ITEM,\r\n    FETCH_TOP_STORY_IDS, \r\n    FETCH_TOP_STORY_ITEM,\r\n    FETCH_ASK_STORY_IDS,\r\n    FETCH_ASK_STORY_ITEM,\r\n    FETCH_NEW_STORY_IDS,\r\n    FETCH_NEW_STORY_ITEM,\r\n    FETCH_SHOW_STORY_IDS,\r\n    FETCH_SHOW_STORY_ITEM,\r\n    FETCH_BEST_STORY_IDS,\r\n    FETCH_BEST_STORY_ITEM,\r\n    FETCH_JOB_ITEM,\r\n    FETCH_JOB_IDS,\r\n} from '../constants';\r\n\r\nexport const fetchTopStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/topstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_TOP_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchBestStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/beststories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_BEST_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchNewStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/newstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_NEW_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchShowStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/showstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_SHOW_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchAskStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/askstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_ASK_STORY_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchJobStoryIds = () => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/jobstories.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_JOB_IDS,\r\n        payload: response.data.slice(0, FETCH_LIMIT)\r\n    })\r\n}\r\n\r\nexport const fetchJobStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_JOB_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const fetchAskStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_ASK_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchShowStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_SHOW_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchTopStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_TOP_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchBestStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_BEST_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchNewStoryItem = (id) => async (dispatch, getState) => {\r\n\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_NEW_STORY_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchCommentItem = (id) => async (dispatch, getState) => {\r\n    const response = await hackernewsApi.get(`v0/item/${id}.json`)\r\n\r\n    dispatch({\r\n        type: FETCH_COMMENT_ITEM,\r\n        payload: {\r\n            [id]: response.data\r\n        }\r\n    })\r\n}","// Constants to be shared between reducers and actions files.\r\n\r\nexport const FETCH_TOP_STORY_IDS = 'FETCH_TOP_STORY_IDS';\r\nexport const FETCH_TOP_STORY_ITEM = 'FETCH_TOP_STORY_ITEM';\r\n\r\nexport const FETCH_NEW_STORY_IDS = 'FETCH_NEW_STORY_IDS';\r\nexport const FETCH_NEW_STORY_ITEM = 'FETCH_NEW_STORY_ITEM';\r\n\r\nexport const FETCH_BEST_STORY_IDS = 'FETCH_BEST_STORY_IDS';\r\nexport const FETCH_BEST_STORY_ITEM = 'FETCH_BEST_STORY_ITEM';\r\n\r\nexport const FETCH_ASK_STORY_IDS = 'FETCH_ASK_STORY_IDS';\r\nexport const FETCH_ASK_STORY_ITEM = 'FETCH_ASK_STORY_ITEM';\r\n\r\nexport const FETCH_SHOW_STORY_IDS = 'FETCH_SHOW_STORY_IDS';\r\nexport const FETCH_SHOW_STORY_ITEM = 'FETCH_SHOW_STORY_ITEM';\r\n\r\nexport const FETCH_JOB_IDS = 'FETCH_JOBS_IDS';\r\nexport const FETCH_JOB_ITEM = 'FETCH_JOB_ITEM';\r\n\r\nexport const FETCH_COMMENT_ITEM = 'FETCH_COMMENT_ITEM';\r\n\r\nexport const FETCH_LIMIT = 150;","import React, { Component } from 'react';\r\nimport ReactComment from './ReactComment';\r\n\r\n\r\nexport default class ReactComments extends Component {\r\n\r\n    render() {\r\n        const { kids } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                { kids.map(id => <ReactComment id={id}/>)}          \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Descriptions, Button, Tag } from 'antd';\r\nimport { calculateTimeDiffString } from '../../../helpers';\r\nimport ReactCommentPlaceholder from '../../loaders/ReactCommentPlaceholder';\r\nimport ReactComments from '../../comments/ReactComments';\r\nconst { Item } = Descriptions;\r\n\r\n\r\nexport default class ReactStoryDescription extends Component {\r\n\r\n    state = {\r\n        showComments: false\r\n    }\r\n\r\n    toggleCommentState = () => {\r\n        console.log(\"Changing the comment state\")\r\n        this.setState({ showComments: !this.state.showComments })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { by, score, title, descendants, kids, time, type, url, text } = this.props.story;\r\n        const { story } = this.props;\r\n        if (time) {\r\n            var timeDiff = calculateTimeDiffString(time);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    title ? [\r\n                    <Descriptions title={ title }>\r\n                        <Item>By: <Tag color=\"purple\">{ by }</Tag></Item>\r\n                        <Item label=\"Score\">{ score }</Item>\r\n                        { descendants ? <Item label=\"Replies\">{ descendants }</Item> : null }\r\n                        <Item>Created: { timeDiff }</Item>\r\n                        <Item label=\"Type\"><Tag color=\"green\">{ type }</Tag></Item>    \r\n                        <Item label=\"Visit source\"><a href={ url } target=\"_blank\">click here</a></Item> \r\n                    </Descriptions>,\r\n                    <div>\r\n                    {\r\n                        text ? \r\n                        <span dangerouslySetInnerHTML={{ __html: text}}></span> : \r\n                        null\r\n                    }\r\n                    </div>,\r\n                    (\r\n                        kids && this.state.showComments === false\r\n                        ?  \r\n                        <a onClick={this.toggleCommentState}>Load comments</a>\r\n                        : \r\n                        null\r\n                        \r\n                    ),\r\n                    ( \r\n                        this.state.showComments\r\n                        ? \r\n                        <ReactComments kids={kids}/>\r\n                        : \r\n                        null\r\n                    )]\r\n                        :\r\n                        <ReactCommentPlaceholder/>\r\n                    }\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    fetchTopStoryItem, \r\n    fetchAskStoryItem, \r\n    fetchShowStoryItem, \r\n    fetchJobStoryItem,\r\n    fetchNewStoryItem, \r\n    fetchBestStoryItem } from '../../../actions';\r\nimport ReactStoryDescription from './ReactStoryDescription';\r\n\r\n\r\n\r\nclass ReactStory extends Component {\r\n\r\n    state = {\r\n        fetched: false\r\n    }\r\n\r\n    toggleFetched = () => {\r\n        this.setState({\r\n            fetched: this.state.fetched\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id, type} = this.props\r\n\r\n        if (type === 'job' && this.state.fetched === false) {\r\n            this.props.fetchJobStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'new' && this.state.fetched === false) {\r\n            this.props.fetchNewStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'best' && this.state.fetched === false) {\r\n            this.props.fetchBestStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'ask' && this.state.fetched === false) {\r\n            this.props.fetchAskStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'show' && this.state.fetched === false) {\r\n            this.props.fetchShowStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n        else if (type === 'top' && this.state.fetched === false) {\r\n            this.props.fetchTopStoryItem(id);\r\n            this.toggleFetched()\r\n        } \r\n    }\r\n\r\n    render() {\r\n        const { story } = this.props;\r\n        return (\r\n            <div style={{ border: '1px solid #f3f3f3', padding: '1rem', marginBottom: '1rem'}}>\r\n            { \r\n                story ? \r\n                <ReactStoryDescription story={story}/> \r\n                :\r\n                null\r\n            } \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    const { type , id} = ownProps;\r\n\r\n    if (type === 'new') {\r\n        return {\r\n            story: { ...state.newStoryItems[id] }\r\n        }\r\n    } else if (type === 'top') {\r\n        return {\r\n            story: { ...state.topStoryItems[id] }\r\n        }\r\n    } else if (type === 'best') {\r\n        return {\r\n            story: { ...state.bestStoryItems[id] }\r\n        }\r\n    } else if (type === 'show') {\r\n        return {\r\n            story: { ...state.showStoryItems[id] }\r\n        }\r\n    } else if (type === 'job') {\r\n        return {\r\n            story: { ...state.jobStoryItems[id] }\r\n        }\r\n    } else if (type === 'ask') {\r\n        return {\r\n            story : { ...state.askStoryItems[id]}\r\n        }\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchTopStoryItem,\r\n    fetchNewStoryItem,\r\n    fetchBestStoryItem,\r\n    fetchJobStoryItem,\r\n    fetchAskStoryItem,\r\n    fetchShowStoryItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactStory)","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nfunction ReactSpinner() {\r\n    return (\r\n        <div style={{textAlign: 'center', paddingTop: '1.6rem'}}>\r\n            <Spin \r\n            delay={1200}\r\n            tip=\"Fetching data...\"\r\n            size=\"large\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactSpinner;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchTopStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactTopStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTopStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { topStoryIds } = this.props\r\n        const loaded = topStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? topStoryIds.map(storyId => <ReactStory type=\"top\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        topStoryIds: state.topStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchTopStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactTopStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchNewStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactNewStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchNewStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { newStoryIds } = this.props\r\n        const loaded = newStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { \r\n                    loaded \r\n                    ? \r\n                    newStoryIds.map(storyId => <ReactStory type='new' key={storyId} id={storyId}/>)\r\n                    : \r\n                    <ReactSpinner/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newStoryIds: state.newStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchNewStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactNewStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchBestStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactBestStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBestStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { bestStoryIds } = this.props\r\n        const loaded = bestStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { \r\n                    loaded ? \r\n                    bestStoryIds.map(storyId => <ReactStory type=\"best\" key={storyId} id={storyId}/>): \r\n                    <ReactSpinner/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        bestStoryIds: state.bestStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchBestStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactBestStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchShowStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactShowStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchShowStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { showStoryIds } = this.props\r\n        const loaded = showStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? showStoryIds.map(storyId => <ReactStory type=\"show\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showStoryIds: state.showStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchShowStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactShowStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchAskStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactAskStories extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAskStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { askStoryIds } = this.props\r\n        const loaded = askStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? askStoryIds.map(storyId => <ReactStory type=\"ask\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        askStoryIds: state.askStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchAskStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactAskStories)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchJobStoryIds } from '../../actions';\r\nimport ReactStory from './details/ReactStory';\r\nimport ReactSpinner from '../loaders/ReactSpinner';\r\n\r\nclass ReactJobs extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchJobStoryIds()\r\n    }\r\n\r\n    render() {\r\n        const { jobStoryIds } = this.props\r\n        const loaded = jobStoryIds.length > 0 ? true: false\r\n        return (\r\n            <React.Fragment>\r\n                { loaded ? jobStoryIds.map(storyId => <ReactStory type=\"job\" key={storyId} id={storyId}/>): \r\n                <ReactSpinner/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jobStoryIds: state.jobStoryIds\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchJobStoryIds\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactJobs)\r\n\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd'\r\nimport ReactTopStories from '../stories/ReactTopStories';\r\nimport ReactNewStories from '../stories/ReactNewStories';\r\nimport ReactBestStories from '../stories/ReactBestStories';\r\nimport ReactShowStories from '../stories/ReactShowStories';\r\nimport ReactAskStories from '../stories/ReactAskStories';\r\nimport ReactJobs from '../stories/ReactJobs';\r\nimport {Route} from 'react-router-dom';\r\n\r\n\r\nexport default class ReactMain extends Component {\r\n    render() {\r\n        return (\r\n            <Layout.Content style={{ padding: '10px', marginTop: 64 }}>\r\n            <div className=\"container-custom\">\r\n                {/* Default to top stories if no path specified */}\r\n                <Route path=\"/\" exact component={ReactTopStories}/>\r\n                <Route path=\"/top-stories\" component={ReactTopStories}/>\r\n                <Route path=\"/new-stories\" component={ReactNewStories}/>\r\n                <Route path=\"/best-stories\" component={ReactBestStories}/>\r\n                <Route path=\"/show-stories\" component={ReactShowStories}/>\r\n                <Route path=\"/ask-stories\" component={ReactAskStories}/>\r\n                <Route path=\"/jobs\" component={ReactJobs}/>\r\n\r\n            </div>\r\n            </Layout.Content>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Layout } from 'antd';\r\nimport ReactHeader from './layout/ReactHeader';\r\nimport ReactFooter from './layout/ReactFooter';\r\nimport ReactMain from './layout/ReactMain';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{minHeight: '100vh'}}>\r\n                <ReactHeader/>\r\n                <ReactMain/>\r\n                <ReactFooter/>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { \r\n    FETCH_LIMIT,\r\n    FETCH_COMMENT_ITEM,\r\n    FETCH_TOP_STORY_IDS, \r\n    FETCH_TOP_STORY_ITEM,\r\n    FETCH_ASK_STORY_IDS,\r\n    FETCH_ASK_STORY_ITEM,\r\n    FETCH_NEW_STORY_IDS,\r\n    FETCH_NEW_STORY_ITEM,\r\n    FETCH_SHOW_STORY_IDS,\r\n    FETCH_SHOW_STORY_ITEM,\r\n    FETCH_BEST_STORY_IDS,\r\n    FETCH_BEST_STORY_ITEM,\r\n    FETCH_JOB_ITEM,\r\n    FETCH_JOB_IDS, } from '../constants';\r\n\r\nconst topStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_TOP_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst topStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_TOP_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst bestStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_BEST_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst bestStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_BEST_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst newStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_NEW_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst newStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_NEW_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst commentStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_COMMENT_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst showStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_SHOW_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst showStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_SHOW_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst askStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_ASK_STORY_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst askStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_ASK_STORY_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst jobStoryItemsReducer = (state = {}, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_JOB_ITEM:\r\n            return {...state, ...payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst jobStoryIdsReducer = (state = [], action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case FETCH_JOB_IDS:\r\n            return payload;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    topStoryIds: topStoryIdsReducer,\r\n    topStoryItems: topStoryItemsReducer,\r\n    newStoryIds: newStoryIdsReducer,\r\n    newStoryItems: newStoryItemsReducer,\r\n    bestStoryIds: bestStoryIdsReducer,\r\n    bestStoryItems: bestStoryItemsReducer,\r\n    commentItems: commentStoryItemsReducer,\r\n    showStoryIds: showStoryIdsReducer,\r\n    showStoryItems: showStoryItemsReducer,\r\n    askStoryIds: askStoryIdsReducer,\r\n    askStoryItems: askStoryItemsReducer,\r\n    jobStoryIds: jobStoryIdsReducer,\r\n    jobStoryItems: jobStoryItemsReducer\r\n \r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n// ant design style sheet\r\nimport 'antd/dist/antd.css';\r\n\r\n// router\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n// redux and redux middleware\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(<Provider store={store}><HashRouter><App/></HashRouter></Provider>, document.getElementById('root'))"],"sourceRoot":""}